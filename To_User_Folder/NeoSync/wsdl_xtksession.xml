<?xml version="1.0" encoding="UTF-8"?>
<definitions targetNamespace="urn:xtk:session" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="urn:xtk:session" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
	<types>
		<s:schema elementFormDefault="qualified" targetNamespace="urn:xtk:session">
			<s:element name="NewInstance">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="NewInstanceResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Duplicate">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DuplicateResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DuplicateWithMappingId">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DuplicateWithMappingIdResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DuplicateTo">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="pkFolder" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DuplicateToResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ApplyDuplicateRules">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ApplyDuplicateRulesResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="SetDefaults">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="SetDefaultsResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Load">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LoadResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LoadIfExists">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LoadIfExistsResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LoadAsText">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="pkPk" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LoadAsTextResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrContent" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Store">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="StoreResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Remove">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="RemoveResponse">
				<s:complexType>
					<s:sequence>
						<s:any/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetPkList">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="entity" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetPkListResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="ppklPkList" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Write">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="domDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="WriteResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="WriteCollection">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="domDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="WriteCollectionResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="DeleteCollection">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strSchema" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="elemWhere">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
						<s:element maxOccurs="1" minOccurs="1" name="bIgnoreDeleteStatus" type="s:boolean"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="DeleteCollectionResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="ImportCollection">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="domDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ImportCollectionResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="GetImages">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strPkList" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetImagesResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pdomDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetEntityIfMoreRecent">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strPk" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strMd5" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="bMustExist" type="s:boolean"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetEntityIfMoreRecentResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pdomDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetDirtyCacheEntities">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="domCacheEntities">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetDirtyCacheEntitiesResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pdomDirtyEntities">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetActiveApplicationMenus">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetActiveApplicationMenusResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pdomDoc">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Logon">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strLogin" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strPassword" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="elemParameters">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LogonResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrSessionToken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="pSessionInfo">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetUserInfo">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetUserInfoResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pUserInfo">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="Logoff">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="LogoffResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="TestCnx">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="TestCnxResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="ChangePassword">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strOldPassword" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strNewPassword" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ChangePasswordResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="GetServerTime">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetServerTimeResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="ptmServerTime" nillable="true" type="s:dateTime"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ServerShutdown">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="ServerShutdownResponse">
				<s:complexType>
					<s:sequence/>
				</s:complexType>
			</s:element>
			<s:element name="GetOption">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strName" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetOptionResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrValue" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="pbtType" type="s:byte"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetNewIds">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="lCount" type="s:int"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetNewIdsResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrIdList" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetNewIdsEx">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="lCount" type="s:int"/>
						<s:element maxOccurs="1" minOccurs="1" name="strSequence" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetNewIdsExResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrIdList" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetCnxInfo">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="GetCnxInfoResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pdomCnxInfo">
							<s:complexType>
								<s:sequence>
									<s:any/>
								</s:sequence>
							</s:complexType>
						</s:element>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="FormatDataPolicy">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="sessiontoken" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strDataPolicy" type="s:string"/>
						<s:element maxOccurs="1" minOccurs="1" name="strValue" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
			<s:element name="FormatDataPolicyResponse">
				<s:complexType>
					<s:sequence>
						<s:element maxOccurs="1" minOccurs="1" name="pstrResult" type="s:string"/>
					</s:sequence>
				</s:complexType>
			</s:element>
		</s:schema>
	</types>
	<message name="NewInstanceIn">
		<part element="tns:NewInstance" name="parameters"/>
	</message>
	<message name="NewInstanceOut">
		<part element="tns:NewInstanceResponse" name="parameters"/>
	</message>
	<message name="DuplicateIn">
		<part element="tns:Duplicate" name="parameters"/>
	</message>
	<message name="DuplicateOut">
		<part element="tns:DuplicateResponse" name="parameters"/>
	</message>
	<message name="DuplicateWithMappingIdIn">
		<part element="tns:DuplicateWithMappingId" name="parameters"/>
	</message>
	<message name="DuplicateWithMappingIdOut">
		<part element="tns:DuplicateWithMappingIdResponse" name="parameters"/>
	</message>
	<message name="DuplicateToIn">
		<part element="tns:DuplicateTo" name="parameters"/>
	</message>
	<message name="DuplicateToOut">
		<part element="tns:DuplicateToResponse" name="parameters"/>
	</message>
	<message name="ApplyDuplicateRulesIn">
		<part element="tns:ApplyDuplicateRules" name="parameters"/>
	</message>
	<message name="ApplyDuplicateRulesOut">
		<part element="tns:ApplyDuplicateRulesResponse" name="parameters"/>
	</message>
	<message name="SetDefaultsIn">
		<part element="tns:SetDefaults" name="parameters"/>
	</message>
	<message name="SetDefaultsOut">
		<part element="tns:SetDefaultsResponse" name="parameters"/>
	</message>
	<message name="LoadIn">
		<part element="tns:Load" name="parameters"/>
	</message>
	<message name="LoadOut">
		<part element="tns:LoadResponse" name="parameters"/>
	</message>
	<message name="LoadIfExistsIn">
		<part element="tns:LoadIfExists" name="parameters"/>
	</message>
	<message name="LoadIfExistsOut">
		<part element="tns:LoadIfExistsResponse" name="parameters"/>
	</message>
	<message name="LoadAsTextIn">
		<part element="tns:LoadAsText" name="parameters"/>
	</message>
	<message name="LoadAsTextOut">
		<part element="tns:LoadAsTextResponse" name="parameters"/>
	</message>
	<message name="StoreIn">
		<part element="tns:Store" name="parameters"/>
	</message>
	<message name="StoreOut">
		<part element="tns:StoreResponse" name="parameters"/>
	</message>
	<message name="RemoveIn">
		<part element="tns:Remove" name="parameters"/>
	</message>
	<message name="RemoveOut">
		<part element="tns:RemoveResponse" name="parameters"/>
	</message>
	<message name="GetPkListIn">
		<part element="tns:GetPkList" name="parameters"/>
	</message>
	<message name="GetPkListOut">
		<part element="tns:GetPkListResponse" name="parameters"/>
	</message>
	<message name="WriteIn">
		<part element="tns:Write" name="parameters"/>
	</message>
	<message name="WriteOut">
		<part element="tns:WriteResponse" name="parameters"/>
	</message>
	<message name="WriteCollectionIn">
		<part element="tns:WriteCollection" name="parameters"/>
	</message>
	<message name="WriteCollectionOut">
		<part element="tns:WriteCollectionResponse" name="parameters"/>
	</message>
	<message name="DeleteCollectionIn">
		<part element="tns:DeleteCollection" name="parameters"/>
	</message>
	<message name="DeleteCollectionOut">
		<part element="tns:DeleteCollectionResponse" name="parameters"/>
	</message>
	<message name="ImportCollectionIn">
		<part element="tns:ImportCollection" name="parameters"/>
	</message>
	<message name="ImportCollectionOut">
		<part element="tns:ImportCollectionResponse" name="parameters"/>
	</message>
	<message name="GetImagesIn">
		<part element="tns:GetImages" name="parameters"/>
	</message>
	<message name="GetImagesOut">
		<part element="tns:GetImagesResponse" name="parameters"/>
	</message>
	<message name="GetEntityIfMoreRecentIn">
		<part element="tns:GetEntityIfMoreRecent" name="parameters"/>
	</message>
	<message name="GetEntityIfMoreRecentOut">
		<part element="tns:GetEntityIfMoreRecentResponse" name="parameters"/>
	</message>
	<message name="GetDirtyCacheEntitiesIn">
		<part element="tns:GetDirtyCacheEntities" name="parameters"/>
	</message>
	<message name="GetDirtyCacheEntitiesOut">
		<part element="tns:GetDirtyCacheEntitiesResponse" name="parameters"/>
	</message>
	<message name="GetActiveApplicationMenusIn">
		<part element="tns:GetActiveApplicationMenus" name="parameters"/>
	</message>
	<message name="GetActiveApplicationMenusOut">
		<part element="tns:GetActiveApplicationMenusResponse" name="parameters"/>
	</message>
	<message name="LogonIn">
		<part element="tns:Logon" name="parameters"/>
	</message>
	<message name="LogonOut">
		<part element="tns:LogonResponse" name="parameters"/>
	</message>
	<message name="GetUserInfoIn">
		<part element="tns:GetUserInfo" name="parameters"/>
	</message>
	<message name="GetUserInfoOut">
		<part element="tns:GetUserInfoResponse" name="parameters"/>
	</message>
	<message name="LogoffIn">
		<part element="tns:Logoff" name="parameters"/>
	</message>
	<message name="LogoffOut">
		<part element="tns:LogoffResponse" name="parameters"/>
	</message>
	<message name="TestCnxIn">
		<part element="tns:TestCnx" name="parameters"/>
	</message>
	<message name="TestCnxOut">
		<part element="tns:TestCnxResponse" name="parameters"/>
	</message>
	<message name="ChangePasswordIn">
		<part element="tns:ChangePassword" name="parameters"/>
	</message>
	<message name="ChangePasswordOut">
		<part element="tns:ChangePasswordResponse" name="parameters"/>
	</message>
	<message name="GetServerTimeIn">
		<part element="tns:GetServerTime" name="parameters"/>
	</message>
	<message name="GetServerTimeOut">
		<part element="tns:GetServerTimeResponse" name="parameters"/>
	</message>
	<message name="ServerShutdownIn">
		<part element="tns:ServerShutdown" name="parameters"/>
	</message>
	<message name="ServerShutdownOut">
		<part element="tns:ServerShutdownResponse" name="parameters"/>
	</message>
	<message name="GetOptionIn">
		<part element="tns:GetOption" name="parameters"/>
	</message>
	<message name="GetOptionOut">
		<part element="tns:GetOptionResponse" name="parameters"/>
	</message>
	<message name="GetNewIdsIn">
		<part element="tns:GetNewIds" name="parameters"/>
	</message>
	<message name="GetNewIdsOut">
		<part element="tns:GetNewIdsResponse" name="parameters"/>
	</message>
	<message name="GetNewIdsExIn">
		<part element="tns:GetNewIdsEx" name="parameters"/>
	</message>
	<message name="GetNewIdsExOut">
		<part element="tns:GetNewIdsExResponse" name="parameters"/>
	</message>
	<message name="GetCnxInfoIn">
		<part element="tns:GetCnxInfo" name="parameters"/>
	</message>
	<message name="GetCnxInfoOut">
		<part element="tns:GetCnxInfoResponse" name="parameters"/>
	</message>
	<message name="FormatDataPolicyIn">
		<part element="tns:FormatDataPolicy" name="parameters"/>
	</message>
	<message name="FormatDataPolicyOut">
		<part element="tns:FormatDataPolicyResponse" name="parameters"/>
	</message>
	<portType name="sessionMethodsSoap">
		<operation name="NewInstance">
			<input message="tns:NewInstanceIn"/>
			<output message="tns:NewInstanceOut"/>
		</operation>
		<operation name="Duplicate">
			<input message="tns:DuplicateIn"/>
			<output message="tns:DuplicateOut"/>
		</operation>
		<operation name="DuplicateWithMappingId">
			<input message="tns:DuplicateWithMappingIdIn"/>
			<output message="tns:DuplicateWithMappingIdOut"/>
		</operation>
		<operation name="DuplicateTo">
			<input message="tns:DuplicateToIn"/>
			<output message="tns:DuplicateToOut"/>
		</operation>
		<operation name="ApplyDuplicateRules">
			<input message="tns:ApplyDuplicateRulesIn"/>
			<output message="tns:ApplyDuplicateRulesOut"/>
		</operation>
		<operation name="SetDefaults">
			<input message="tns:SetDefaultsIn"/>
			<output message="tns:SetDefaultsOut"/>
		</operation>
		<operation name="Load">
			<input message="tns:LoadIn"/>
			<output message="tns:LoadOut"/>
		</operation>
		<operation name="LoadIfExists">
			<input message="tns:LoadIfExistsIn"/>
			<output message="tns:LoadIfExistsOut"/>
		</operation>
		<operation name="LoadAsText">
			<input message="tns:LoadAsTextIn"/>
			<output message="tns:LoadAsTextOut"/>
		</operation>
		<operation name="Store">
			<input message="tns:StoreIn"/>
			<output message="tns:StoreOut"/>
		</operation>
		<operation name="Remove">
			<input message="tns:RemoveIn"/>
			<output message="tns:RemoveOut"/>
		</operation>
		<operation name="GetPkList">
			<input message="tns:GetPkListIn"/>
			<output message="tns:GetPkListOut"/>
		</operation>
		<operation name="Write">
			<input message="tns:WriteIn"/>
			<output message="tns:WriteOut"/>
		</operation>
		<operation name="WriteCollection">
			<input message="tns:WriteCollectionIn"/>
			<output message="tns:WriteCollectionOut"/>
		</operation>
		<operation name="DeleteCollection">
			<input message="tns:DeleteCollectionIn"/>
			<output message="tns:DeleteCollectionOut"/>
		</operation>
		<operation name="ImportCollection">
			<input message="tns:ImportCollectionIn"/>
			<output message="tns:ImportCollectionOut"/>
		</operation>
		<operation name="GetImages">
			<input message="tns:GetImagesIn"/>
			<output message="tns:GetImagesOut"/>
		</operation>
		<operation name="GetEntityIfMoreRecent">
			<input message="tns:GetEntityIfMoreRecentIn"/>
			<output message="tns:GetEntityIfMoreRecentOut"/>
		</operation>
		<operation name="GetDirtyCacheEntities">
			<input message="tns:GetDirtyCacheEntitiesIn"/>
			<output message="tns:GetDirtyCacheEntitiesOut"/>
		</operation>
		<operation name="GetActiveApplicationMenus">
			<input message="tns:GetActiveApplicationMenusIn"/>
			<output message="tns:GetActiveApplicationMenusOut"/>
		</operation>
		<operation name="Logon">
			<input message="tns:LogonIn"/>
			<output message="tns:LogonOut"/>
		</operation>
		<operation name="GetUserInfo">
			<input message="tns:GetUserInfoIn"/>
			<output message="tns:GetUserInfoOut"/>
		</operation>
		<operation name="Logoff">
			<input message="tns:LogoffIn"/>
			<output message="tns:LogoffOut"/>
		</operation>
		<operation name="TestCnx">
			<input message="tns:TestCnxIn"/>
			<output message="tns:TestCnxOut"/>
		</operation>
		<operation name="ChangePassword">
			<input message="tns:ChangePasswordIn"/>
			<output message="tns:ChangePasswordOut"/>
		</operation>
		<operation name="GetServerTime">
			<input message="tns:GetServerTimeIn"/>
			<output message="tns:GetServerTimeOut"/>
		</operation>
		<operation name="ServerShutdown">
			<input message="tns:ServerShutdownIn"/>
			<output message="tns:ServerShutdownOut"/>
		</operation>
		<operation name="GetOption">
			<input message="tns:GetOptionIn"/>
			<output message="tns:GetOptionOut"/>
		</operation>
		<operation name="GetNewIds">
			<input message="tns:GetNewIdsIn"/>
			<output message="tns:GetNewIdsOut"/>
		</operation>
		<operation name="GetNewIdsEx">
			<input message="tns:GetNewIdsExIn"/>
			<output message="tns:GetNewIdsExOut"/>
		</operation>
		<operation name="GetCnxInfo">
			<input message="tns:GetCnxInfoIn"/>
			<output message="tns:GetCnxInfoOut"/>
		</operation>
		<operation name="FormatDataPolicy">
			<input message="tns:FormatDataPolicyIn"/>
			<output message="tns:FormatDataPolicyOut"/>
		</operation>
	</portType>
	<binding name="sessionMethodsSoap" type="tns:sessionMethodsSoap">
		<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<operation name="NewInstance">
			<soap:operation soapAction="xtk:persist#NewInstance" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Duplicate">
			<soap:operation soapAction="xtk:persist#Duplicate" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="DuplicateWithMappingId">
			<soap:operation soapAction="xtk:persist#DuplicateWithMappingId" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="DuplicateTo">
			<soap:operation soapAction="xtk:persist#DuplicateTo" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="ApplyDuplicateRules">
			<soap:operation soapAction="xtk:persist#ApplyDuplicateRules" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="SetDefaults">
			<soap:operation soapAction="xtk:persist#SetDefaults" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Load">
			<soap:operation soapAction="xtk:persist#Load" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="LoadIfExists">
			<soap:operation soapAction="xtk:persist#LoadIfExists" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="LoadAsText">
			<soap:operation soapAction="xtk:persist#LoadAsText" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Store">
			<soap:operation soapAction="xtk:persist#Store" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Remove">
			<soap:operation soapAction="xtk:persist#Remove" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetPkList">
			<soap:operation soapAction="xtk:persist#GetPkList" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Write">
			<soap:operation soapAction="xtk:persist#Write" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="WriteCollection">
			<soap:operation soapAction="xtk:persist#WriteCollection" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="DeleteCollection">
			<soap:operation soapAction="xtk:persist#DeleteCollection" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="ImportCollection">
			<soap:operation soapAction="xtk:persist#ImportCollection" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetImages">
			<soap:operation soapAction="xtk:persist#GetImages" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetEntityIfMoreRecent">
			<soap:operation soapAction="xtk:persist#GetEntityIfMoreRecent" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetDirtyCacheEntities">
			<soap:operation soapAction="xtk:persist#GetDirtyCacheEntities" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetActiveApplicationMenus">
			<soap:operation soapAction="xtk:persist#GetActiveApplicationMenus" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Logon">
			<soap:operation soapAction="xtk:session#Logon" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetUserInfo">
			<soap:operation soapAction="xtk:session#GetUserInfo" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="Logoff">
			<soap:operation soapAction="xtk:session#Logoff" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="TestCnx">
			<soap:operation soapAction="xtk:session#TestCnx" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="ChangePassword">
			<soap:operation soapAction="xtk:session#ChangePassword" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetServerTime">
			<soap:operation soapAction="xtk:session#GetServerTime" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="ServerShutdown">
			<soap:operation soapAction="xtk:session#ServerShutdown" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetOption">
			<soap:operation soapAction="xtk:session#GetOption" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetNewIds">
			<soap:operation soapAction="xtk:session#GetNewIds" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetNewIdsEx">
			<soap:operation soapAction="xtk:session#GetNewIdsEx" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="GetCnxInfo">
			<soap:operation soapAction="xtk:session#GetCnxInfo" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
		<operation name="FormatDataPolicy">
			<soap:operation soapAction="xtk:session#FormatDataPolicy" style="document"/>
			<input>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</input>
			<output>
				<soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
			</output>
		</operation>
	</binding>
	<service name="XtkSession">
		<port binding="tns:sessionMethodsSoap" name="sessionMethodsSoap">
			<soap:address location="http://neo2indus-dev:8080/nl/jsp/soaprouter.jsp"/>
		</port>
	</service>
</definitions>